pch=16, cex=0.5,
xlab='Cluster', ylab='Duration',
main='Duration by Cluster', frame=FALSE)
df2 = read.csv("WardClustering_ACGs_and_OtherFeatures_5Classes.csv")
boxplot(df2$MFRBlockHz ~ df2$SmallClusterName,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Duration',
main='Duration by Cluster', frame=FALSE)
df2$SmallClusterName
df2 = read.csv("WardClustering_ACGs_and_OtherFeatures_5Classes_Comparison.csv")
boxplot(df2$MFRBlockHz ~ df2$Cluster,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Duration',
main='Duration by Cluster', frame=FALSE)
df2$Cluster2 <- factor(df2$Cluster , levels=c("Pk", "CS", "MLI", "Gr", "GoMF", "Unknown"))
boxplot(df2$MFRBlockHz ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Mean Firing Rate', frame=FALSE)
boxplot(df2$MFRBlockHz ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Mean Firing Rate', frame=FALSE) + theme_minimal()
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = "white")
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = c2)
+ stat_compare_means() + theme(legend.position="none") + theme_minimal()
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = c2)
+ stat_compare_means() + theme(legend.position="none")
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = c2)
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = c2) +
stat_compare_means() + theme(legend.position="none")
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = c2,
font.label = list(size = 12, face = "plain", color ="red")) +
stat_compare_means() + theme(legend.position="none")
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1,
font.label = list(size = 12, face = "plain", color ="red")) +
stat_compare_means() + theme(legend.position="none")
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = c2,
font.label = list(size = 12, face = "plain", color ="red")) +
stat_compare_means() + theme(legend.position="none")
boxplot(df2$MFRBlockHz ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Mean Firing Rate', frame=FALSE) + theme_minimal()
ggboxplot(df2, x = "Cluster2", y = "MFRBlockHz", color = "Cluster2", palette = c1, fill = c2,
font.label = list(size = 12, face = "plain", color ="red"), frame=FALSE) +
stat_compare_means() + theme(legend.position="none")
boxplot(df2$MFRBlockHz ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Mean Firing Rate', frame=FALSE) + theme_minimal()
boxplot(df2$tf_Entropy ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Entropy', frame=FALSE) + theme_minimal()
boxplot(df2$tf_MedIsi ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Median ISI', frame=FALSE) + theme_minimal()
boxplot(df2$wf_Duration ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Duratio', frame=FALSE) + theme_minimal()
boxplot(df2$wf_Duration ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Duration', frame=FALSE) + theme_minimal()
boxplot(df2$tf_CV2Mean ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Mean CV2', frame=FALSE) + theme_minimal()
boxplot(df2$tf_LvR ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='LvR', frame=FALSE) + theme_minimal()
boxplot(df2$wf_PosHwDuration ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Positive half-width duration', frame=FALSE) + theme_minimal()
boxplot(df2$wf_NegHwDuration ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Negative half-width duration', frame=FALSE) + theme_minimal()
boxplot(df2$wf_DepolarizationSlope ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Depolarization Slope', frame=FALSE) + theme_minimal()
boxplot(df2$wf_RecoverySlope ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Recovery Slope', frame=FALSE) + theme_minimal()
boxplot(df2$wf_RepolarizationSlope ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Repolarization Slope', frame=FALSE) + theme_minimal()
boxplot(df2$wf_PosDecayTime ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Positive Decay Time', frame=FALSE) + theme_minimal()
boxplot(df2$wf_NegDecayTime ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Negative Decay Time', frame=FALSE) + theme_minimal()
boxplot(df2$wf_RiseTime ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Rise Time', frame=FALSE) + theme_minimal()
boxplot(df2$wf_PkTrRatio ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Peak-Trough Ratio', frame=FALSE) + theme_minimal()
boxplot(df2$wf_FallTime ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Fall Time', frame=FALSE) + theme_minimal()
boxplot(df2$MeanAmpBlock ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Mean Amplitude', frame=FALSE) + theme_minimal()
boxplot(df2$tf_skw ~ df2$Cluster2,
col=c2, medcol=c1,
whiskcol=c1,
staplecol=c1,
boxcol=c1,
outcol=c1,
pch=16, cex=0.5,
xlab='Cluster', ylab='Skewness', frame=FALSE) + theme_minimal()
# http://documentation1458.rssing.com/chan-49683810/all_p4.html
fviz_nbclust(df2, kmeans, method = "gap_stat")
# http://documentation1458.rssing.com/chan-49683810/all_p4.html
fviz_nbclust(df2, hcut, method = "gap_stat")
data = read.csv("WardClustering_ACGs_and_OtherFeatures_5Classes_Comparison.csv")  # latest file!
# Define factor columns
cols <- c("SampleP", "Sample", "Unit", "RespPk", "RespGo", "RespGr", "RespMF", "RespMLI", "Cluster_x",
"Cluster_y", "SmallCluster", "SmallClusterName", "ClusterACG", "Cluster")
data[cols] <- lapply(data[cols], factor)
# Define numeric columns for PCA
nums <- unlist(lapply(data, is.numeric))
df <- data[ , nums]
# http://documentation1458.rssing.com/chan-49683810/all_p4.html
fviz_nbclust(df, hcut, method = "gap_stat")
df <- df[,sapply(df, function(v) var(v, na.rm=TRUE)!=0)]
# http://documentation1458.rssing.com/chan-49683810/all_p4.html
fviz_nbclust(na.omit(df), hcut, method = "silhouette")
# See only electrical
df2 <- select(df,
Cluster
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
# See only electrical
df2 <- select(df,
Cluster,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
# PCA (we need to ignore missing values from responsive units)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
data = read.csv("WardClustering_ACGs_and_OtherFeatures_5Classes_Comparison.csv")  # latest file!
# Define factor columns
cols <- c("SampleP", "Sample", "Unit", "RespPk", "RespGo", "RespGr", "RespMF", "RespMLI", "Cluster_x",
"Cluster_y", "SmallCluster", "SmallClusterName", "ClusterACG")
data[cols] <- lapply(data[cols], factor)
# Define numeric columns for PCA
nums <- unlist(lapply(data, is.numeric))
df <- data[ , nums]
df <- df[,sapply(df, function(v) var(v, na.rm=TRUE)!=0)]
# See only electrical
df2 <- select(df,
Cluster,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
View(data)
# See only electrical
df2 <- select(df,
Cluster,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
View(df2)
# See only electrical
df2 <- select(data,
Cluster,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
# PCA (we need to ignore missing values from responsive units)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
library(dplyr)
library(ggbiplot)
library(rgl)
library(RColorBrewer)
library(scales)
library(pvclust)
library(factoextra)
library(fpc)
library(NbClust)
library(ggplot2)
data = read.csv("UltimateData.csv")  # latest file!
# Define factor columns
cols <- c("SampleP", "Sample", "Unit", "RespPk", "RespGo", "RespGr", "RespMF", "RespMLI", "Cluster_x",
"Cluster_y", "SmallCluster", "SmallClusterName", "ClusterACG", "Cluster")
data = read.csv("UltimateData.csv")  # latest file!
# Define factor columns
cols <- c("SampleP", "Sample", "Unit", "RespPk", "RespGo", "RespGr", "RespMF", "RespMLI", "Cluster_x",
"Cluster_y", "SmallCluster", "SmallClusterName", "ClusterACG", "Cluster")
data[cols] <- lapply(data[cols], factor)
# Define numeric columns for PCA
nums <- unlist(lapply(data, is.numeric))
df <- data[ , nums]
df <- df[,sapply(df, function(v) var(v, na.rm=TRUE)!=0)]
# See only electrical
df2 <- select(df,
ClusterNo,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
pcs <- data.frame(df.pca$x[,1:5])
fviz_nbclust(pcs, hcut, method = c("silhouette", "wss", "gap_stat"))
GoMF <- df[df$ClusterNo == 5, ]
library(dplyr)
library(ggbiplot)
library(rgl)
library(RColorBrewer)
library(scales)
library(pvclust)
library(factoextra)
library(fpc)
library(NbClust)
library(ggplot2)
data = read.csv("UltimateData.csv")  # latest file!
# Define factor columns
cols <- c("SampleP", "Sample", "Unit", "RespPk", "RespGo", "RespGr", "RespMF", "RespMLI", "Cluster_x",
"Cluster_y", "SmallCluster", "SmallClusterName", "ClusterACG", "Cluster")
data[cols] <- lapply(data[cols], factor)
# Define numeric columns for PCA
nums <- unlist(lapply(data, is.numeric))
df <- data[ , nums]
df <- df[,sapply(df, function(v) var(v, na.rm=TRUE)!=0)]
GoMF <- df[df$ClusterNo == 5, ]
# See only electrical
df2 <- select(GoMF,
ClusterNo,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
# PCA (we need to ignore missing values from responsive units)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
df2 <- df2[,sapply(df, function(v) var(v, na.rm=TRUE)!=0)]
# PCA (we need to ignore missing values from responsive units)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
df2 <- df2[,sapply(df, function(v) var(v, na.rm=TRUE)!=0)]
View(df2)
# See only electrical
df2 <- select(GoMF,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
# PCA (we need to ignore missing values from responsive units)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
summary(df.pca)
pcs <- data.frame(df.pca$x[,1:5])
fviz_nbclust(pcs, hcut, method = c("silhouette", "wss", "gap_stat"))
fviz_nbclust(pcs, hcut, method = c("silhouette", "wss", "gap_stat"))
# Ward
d <- dist(pcs, method = "euclidean")
fit <- hclust(d, method="ward.D")
groups <- cutree(fit, k=2)
# Ward hierarchical
hc.res <- eclust(pcs, "hclust", k = 2, hc_metric = "euclidean",
hc_method = "ward.D", graph = FALSE)
fviz_dend(hc.res, show_labels = FALSE, palette = "jco", as.ggplot = TRUE)
df_ward <- mutate(df2,
Sample = GoMF$Sample,
Unit=GoMF$Unit,
ClusterGoMF = groups)
write.csv(df_ward, row.names = F, 'WardClustering_GoMF.csv')
View(df_ward)
GoMF$Sample
GoMF <- df[df$ClusterNo == 5, ]
df_ward <- mutate(df2,
Sample = GoMF$Sample,
Unit=GoMF$Unit,
ClusterGoMF = groups)
View(df_ward)
GoMF$Sample
GoMF <- df[df$ClusterNo == 5, ]
df_ward <- mutate(df2,
Sample = GoMF$Sample,
Unit=GoMF$Unit,
ClusterGoMF = groups)
View(df_ward)
data = read.csv("UltimateData.csv")  # latest file!
GoMF <- data[data$ClusterNo == 5, ]
df_ward <- mutate(df2,
Sample = GoMF$Sample,
Unit=GoMF$Unit,
ClusterGoMF = groups)
write.csv(df_ward, row.names = F, 'WardClustering_GoMF.csv')
View(df_ward)
df_ward <- mutate(df2,
Sample = GoMF$Sample,
Unit=GoMF$Unit,
RespPk = GoMF$RespPk,
RespGo = GoMF$RespGo,
RespMLI = GoMF$RespMLI,
RespMF = GoMF$RespMF,
RespGr = GoMF$RespGr,
ClusterGoMF = groups)
write.csv(df_ward, row.names = F, 'WardClustering_GoMF.csv')
library(dplyr)
library(ggbiplot)
library(rgl)
library(RColorBrewer)
library(scales)
library(pvclust)
library(factoextra)
library(fpc)
library(NbClust)
library(ggplot2)
data = read.csv("UltimateData.csv")  # latest file!
# See only electrical
df2 <- select(data,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
# PCA (we need to ignore missing values from responsive units)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
summary(df.pca)
pcs <- data.frame(df.pca$x[,1:5])
# We clearly have 2 clusters here. Hopefully Golgi and MF separated
fviz_nbclust(pcs, hcut, method = c("silhouette", "wss", "gap_stat"))
d <- dist(pcs, method = "euclidean")
fit <- hclust(d, method="ward.D")
groups <- cutree(fit, k=3)
df_ward <- mutate(df2,
Sample = data$Sample,
Unit=data$Unit,
RespPk = data$RespPk,
RespGo = data$RespGo,
RespMLI = data$RespMLI,
RespMF = data$RespMF,
RespGr = data$RespGr,
Cluster = groups)
write.csv(df_ward, row.names = F, 'WardClustering_NewGolgiesP1.csv')
data = read.csv("UltimateData.csv")  # latest file!
View(data)
df <- subset(data, !(data$Cluster %in% c(1,2)))
df <- subset(data, !(data$ClusterNo %in% c(1,2)))
View(df)
df$ClusterNo
# See only electrical
df2 <- select(df,
MFRBlockHz,
tf_MedIsi,
tf_Entropy,
tf_CV2Mean,
tf_LvR)
# PCA (we need to ignore missing values from responsive units)
df.pca <- prcomp(na.omit(df2), center = TRUE, scale = TRUE)
summary(df.pca)
pcs <- data.frame(df.pca$x[,1:5])
# We clearly have 3 clusters here.
fviz_nbclust(pcs, hcut, method = c("silhouette", "wss", "gap_stat"))
d <- dist(pcs, method = "euclidean")
fit <- hclust(d, method="ward.D")
groups <- cutree(fit, k=4)
df_ward <- mutate(df2,
Sample = data$Sample,
Unit=data$Unit,
RespPk = data$RespPk,
RespGo = data$RespGo,
RespMLI = data$RespMLI,
RespMF = data$RespMF,
RespGr = data$RespGr,
PrevClust = data$Cluster
NewCluster = groups)
df_ward <- mutate(df2,
Sample = data$Sample,
Unit=data$Unit,
RespPk = data$RespPk,
RespGo = data$RespGo,
RespMLI = data$RespMLI,
RespMF = data$RespMF,
RespGr = data$RespGr,
PrevClust = data$Cluster,
NewCluster = groups)
df_ward <- mutate(df2,
Sample = df$Sample,
Unit=df$Unit,
RespPk = df$RespPk,
RespGo = df$RespGo,
RespMLI = df$RespMLI,
RespMF = df$RespMF,
RespGr = df$RespGr,
PrevClust = df$Cluster,
NewCluster = groups)
write.csv(df_ward, row.names = F, 'WardClustering_NewGolgiesP1.csv')
